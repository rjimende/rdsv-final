#!/bin/bash

# List of knfs names
knfnames=('access' 'cpe' 'wan')

KNFCMD="microk8s kubectl exec -n $SDWNS -it"

allknfs=${knfnames[*]}
USAGE="
Usage:
  sdw-knf-consoles <cmd> <ns_id> <ns_name>
    to open|close all consoles
    Valid values:
      <cmd>: open close
      <ns_id>: OSM network service id

  sdw-knf-consoles <cmd> <ns_id> <ns_name> <knf-name>
       to open the console of a specific knf
       Valid values:
           <cmd>: open close
           <ns_id>: OSM network service id
           <knf-name>: $allknfs
"

function deployment_id() {
    echo `osm ns-show $1 | grep kdu-instance | grep $2 | awk -F':' '{gsub(/[", |]/, "", $2); print $2}' `
}

function ns_name() {
    echo `osm ns-show $1 | grep short-name | awk -F'|' '{gsub(/[", ]/, "", $3); print $3}' `
}

function knf_console {

    cmd=$1
    nsid=$2
    knfname=$3

    if [ "$cmd" == 'open' ]; then
        echo "--"
        echo "-- Starting console of knf $knfname of NS $nsid"
        # Get OSM id
        OSMID=$(deployment_id $nsid $knfname)
        nsname=$(ns_name $nsid)
	    if [ "$OSMID" ]; then 
            KID="deploy/$OSMID"
            # Set KNF hostname
            echo "$KNFCMD $KID -- hostname $nsname-$knfname"
            $KNFCMD $KID -- hostname $nsname-$knfname

            # Start console
            echo "xfce4-terminal --title $nsname-$knfname --hide-menubar -x $KNFCMD $KID \-\- /bin/bash >/dev/null 2>&1 &"
            xfce4-terminal --title $nsname-$knfname --hide-menubar -x $KNFCMD $KID \-\- /bin/bash >/dev/null 2>&1 &
	    else
	        echo "-- WARNING: knf $nsname-$knfname not started"
	    fi

    elif [ "$cmd" == 'close' ]; then
        echo "--"
        echo "-- Closing console of knf $knfname of NS $nsname"
        while wmctrl -c $nsname-$knfname; do sleep 0.5; done
    fi
}

#
# Main
#
if [ ! "$SDWNS" ] ; then
    echo ""
    echo "ERROR: SDWNS variable not defined"
    exit 1
fi

if [ "$1" == 'open' ] || [ "$1" == 'close' ] ; then
    cmd=$1
else
    echo ""
    echo "ERROR: unknown command '$1'"
    echo "$USAGE"
    exit 1
fi

if [ ! "$2" ] ; then
    echo ""
    echo "$USAGE"
    exit 1
fi
NS=$2
if [ "$3" ]; then
    if [[ ! " ${knfnames[@]} " =~ " $3 " ]]; then
        echo ""
        echo "ERROR: unknown KNF '$3'"
        echo "$USAGE"
        exit 1
    fi
    knf=$3
    knf_console $cmd $NS $knf
else
    echo "--"
    echo "-- Starting all consoles"
    echo "--"

    for j in ${!knfnames[*]}; do 
        knf_console $cmd $NS ${knfnames[$j]}
    done
fi
echo "-- done"
